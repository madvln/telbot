from telegram import Update, ChatMember
from telegram.ext import (
    Updater,
    MessageHandler,
    Filters,
    CallbackContext,
    ChatMemberHandler,
)
from dotenv import load_dotenv
import os

load_dotenv()
API_TOKEN = os.getenv("TOKEN")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞
def mention_handler(update: Update, context: CallbackContext) -> None:
    bot_username = context.bot.username  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞
    text = update.message.text.lower()  # –ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –±–æ—Ç
    if bot_username.lower() in text:
        # –°–æ–∑–¥–∞–µ–º –æ–ø—Ä–æ—Å
        question = "–ü–µ—Ä–µ–∫—É—Ä? \n‚ÄºÔ∏è –ö—É—Ä–µ–Ω–∏–µ –≤—Ä–µ–¥–∏—Ç –≤–∞—à–µ–º—É –∑–¥–æ—Ä–æ–≤—å—é ‚ÄºÔ∏è"
        options = ["üö¨", "üö≠"]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø—Ä–æ—Å
        message = update.message.reply_poll(
            question=question, options=options, is_anonymous=False
        )

        # –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.job_queue.run_once(delete_user_message, 60 * 10, context=update.message)

        # –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ 60*10 —Å–µ–∫—É–Ω–¥
        context.job_queue.run_once(delete_message, 60 * 10, context=message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç
def welcome_handler(update: Update, context: CallbackContext) -> None:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ –±–æ—Ç –≤ –Ω–æ–≤—ã–π —á–∞—Ç
    if (
        update.message.chat.type in ["group", "supergroup"]
        and update.message.new_chat_members
    ):
        for member in update.message.new_chat_members:
            if member.id == context.bot.id:
                # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                context.bot.send_message(
                    chat_id=update.message.chat.id,
                    text="–ü—Ä–∏–≤–µ—Ç! –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–∑–≤–∞—Ç—å –∫–æ–ª–ª–µ–≥ –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä, –≤—ã–∑–æ–≤–∏ –º–µ–Ω—è!",
                )


def delete_user_message(context: CallbackContext) -> None:
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –±–æ—Ç–∞
    context.bot.delete_message(
        chat_id=context.job.context.chat.id, message_id=context.job.context.message_id
    )


def delete_message(context: CallbackContext) -> None:
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø—Ä–æ—Å–æ–º
    context.bot.delete_message(
        chat_id=context.job.context.chat.id, message_id=context.job.context.message_id
    )


def main() -> None:
    updater = Updater(API_TOKEN)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞
    updater.dispatcher.add_handler(
        MessageHandler(Filters.text & ~Filters.command, mention_handler)
    )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç
    updater.dispatcher.add_handler(
        MessageHandler(Filters.status_update.new_chat_members, welcome_handler)
    )

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
